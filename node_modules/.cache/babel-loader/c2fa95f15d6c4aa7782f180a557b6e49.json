{"ast":null,"code":"var _jsxFileName = \"/Users/cthyne/Desktop/qualified-challenges/pomodoro-timer/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport useTime from \"../utils/useTime\";\nimport BreakTime from \"./BreakTime\";\nimport FocusTime from \"./FocusTime\";\nimport PlayPause from \"./PlayPause\";\nimport Timer from \"./Timer\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [inSession, setInSession] = useState(false);\n  const [onBreak, setOnBreak] = useState(false);\n  const [breakTimeState, setBreakTimeState] = useState(5);\n  const [focusTimeState, setFocusTimeState] = useState(25);\n  const [timeRemainingState, setTimeRemainingState] = useState(focusTimeState * 60);\n  const alarm = new Audio('https://actions.google.com/sounds/v1/alarms/alarm_clock.ogg');\n\n  const increaseByFive = () => {\n    if (inSession) return;\n    if (focusTimeState === 60) return;\n    setFocusTimeState(current => current + 5);\n    setTimeRemainingState(current => current + 300);\n  };\n\n  const decreaseByFive = () => {\n    if (inSession) return;\n    if (focusTimeState === 5) return;\n    setFocusTimeState(current => current - 5);\n    setTimeRemainingState(current => current - 300);\n  };\n\n  const increaseByOne = () => {\n    if (inSession) return;\n    if (breakTimeState === 15) return;\n    setBreakTimeState(current => current + 1);\n  };\n\n  const decreaseByOne = () => {\n    if (inSession) return;\n    if (breakTimeState === 1) return;\n    setBreakTimeState(current => current - 1);\n  };\n\n  useTime(() => {\n    // ToDo: Implement what should happen when the timer is running\n    setTimeRemainingState(current => current - 1);\n\n    if (timeRemainingState <= 0) {\n      setIsPaused(() => !isPaused);\n      alarm.play();\n\n      if (onBreak === false) {\n        setOnBreak(() => !onBreak);\n        setTimeRemainingState(breakTimeState * 60);\n      } else {\n        setOnBreak(() => !onBreak);\n        setTimeRemainingState(focusTimeState * 60);\n      }\n    }\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    if (!isTimerRunning) setInSession(true);\n    if (inSession) setIsPaused(prevState => !prevState);\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  function stopSession() {\n    if (!inSession) return;\n    setInSession(false);\n    setOnBreak(false);\n    setIsPaused(false);\n    setIsTimerRunning(false);\n    setTimeRemainingState(focusTimeState * 60);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FocusTime, {\n    focusTime: focusTimeState,\n    inSession: inSession,\n    upByFive: increaseByFive,\n    downByFive: decreaseByFive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BreakTime, {\n    breakTime: breakTimeState,\n    upByOne: increaseByOne,\n    downByOne: decreaseByOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(PlayPause, {\n    playPause: playPause,\n    stopSession: stopSession,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Timer, {\n    timeRemainingState: timeRemainingState,\n    inSession: inSession,\n    onBreak: onBreak,\n    isPaused: isPaused,\n    focusTime: focusTimeState,\n    breakTimel: breakTimeState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/cthyne/Desktop/qualified-challenges/pomodoro-timer/src/pomodoro/Pomodoro.js"],"names":["React","useState","useTime","BreakTime","FocusTime","PlayPause","Timer","Pomodoro","isTimerRunning","setIsTimerRunning","isPaused","setIsPaused","inSession","setInSession","onBreak","setOnBreak","breakTimeState","setBreakTimeState","focusTimeState","setFocusTimeState","timeRemainingState","setTimeRemainingState","alarm","Audio","increaseByFive","current","decreaseByFive","increaseByOne","decreaseByOne","play","playPause","prevState","stopSession"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,SAASC,QAAT,GAAoB;AAClB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACe,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACiB,cAAD,EAAiBC,iBAAjB,IAAsClB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACmB,kBAAD,EAAqBC,qBAArB,IAA8CpB,QAAQ,CAACiB,cAAc,GAAC,EAAhB,CAA5D;AACA,QAAMI,KAAK,GAAG,IAAIC,KAAJ,CAAU,6DAAV,CAAd;;AAEA,QAAMC,cAAc,GAAG,MAAM;AAC3B,QAAGZ,SAAH,EAAc;AACd,QAAIM,cAAc,KAAK,EAAvB,EAA2B;AAC3BC,IAAAA,iBAAiB,CAAEM,OAAD,IAAaA,OAAO,GAAG,CAAxB,CAAjB;AACAJ,IAAAA,qBAAqB,CAAEI,OAAD,IAAaA,OAAO,GAAG,GAAxB,CAArB;AACD,GALD;;AAMA,QAAMC,cAAc,GAAG,MAAM;AAC3B,QAAGd,SAAH,EAAc;AACd,QAAIM,cAAc,KAAK,CAAvB,EAA0B;AAC1BC,IAAAA,iBAAiB,CAAEM,OAAD,IAAaA,OAAO,GAAG,CAAxB,CAAjB;AACAJ,IAAAA,qBAAqB,CAAEI,OAAD,IAAaA,OAAO,GAAG,GAAxB,CAArB;AACD,GALD;;AAMA,QAAME,aAAa,GAAG,MAAM;AAC1B,QAAGf,SAAH,EAAc;AACd,QAAII,cAAc,KAAK,EAAvB,EAA2B;AAC3BC,IAAAA,iBAAiB,CAAEQ,OAAD,IAAaA,OAAO,GAAG,CAAxB,CAAjB;AACD,GAJD;;AAKA,QAAMG,aAAa,GAAG,MAAM;AAC1B,QAAGhB,SAAH,EAAc;AACd,QAAII,cAAc,KAAK,CAAvB,EAA0B;AAC1BC,IAAAA,iBAAiB,CAAEQ,OAAD,IAAaA,OAAO,GAAG,CAAxB,CAAjB;AACD,GAJD;;AAMAvB,EAAAA,OAAO,CACL,MAAM;AACJ;AACAmB,IAAAA,qBAAqB,CAAEI,OAAD,IAAaA,OAAO,GAAG,CAAxB,CAArB;;AACA,QAAIL,kBAAkB,IAAI,CAA1B,EAA6B;AAC3BT,MAAAA,WAAW,CAAC,MAAM,CAACD,QAAR,CAAX;AACAY,MAAAA,KAAK,CAACO,IAAN;;AACA,UAAIf,OAAO,KAAK,KAAhB,EAAuB;AACrBC,QAAAA,UAAU,CAAC,MAAM,CAACD,OAAR,CAAV;AACAO,QAAAA,qBAAqB,CAACL,cAAc,GAAC,EAAhB,CAArB;AACD,OAHD,MAGO;AACLD,QAAAA,UAAU,CAAC,MAAM,CAACD,OAAR,CAAV;AACAO,QAAAA,qBAAqB,CAACH,cAAc,GAAC,EAAhB,CAArB;AACD;AACF;AAEF,GAhBI,EAiBLV,cAAc,GAAG,IAAH,GAAU,IAjBnB,CAAP;;AAqBA,WAASsB,SAAT,GAAqB;AACnB,QAAI,CAACtB,cAAL,EAAqBK,YAAY,CAAC,IAAD,CAAZ;AACrB,QAAID,SAAJ,EAAeD,WAAW,CAAEoB,SAAD,IAAe,CAACA,SAAjB,CAAX;AACftB,IAAAA,iBAAiB,CAAEsB,SAAD,IAAe,CAACA,SAAjB,CAAjB;AACD;;AAED,WAASC,WAAT,GAAuB;AACrB,QAAI,CAACpB,SAAL,EAAgB;AAChBC,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAAqBE,IAAAA,UAAU,CAAC,KAAD,CAAV;AAAmBJ,IAAAA,WAAW,CAAC,KAAD,CAAX;AAAoBF,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AAC5DY,IAAAA,qBAAqB,CAACH,cAAc,GAAC,EAAhB,CAArB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEA,cAAtB;AAAsC,IAAA,SAAS,EAAEN,SAAjD;AAA4D,IAAA,QAAQ,EAAEY,cAAtE;AAAsF,IAAA,UAAU,EAAEE,cAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEV,cAAtB;AAAsC,IAAA,OAAO,EAAEW,aAA/C;AAA8D,IAAA,SAAS,EAAEC,aAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAKE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEE,SAAtB;AAAiC,IAAA,WAAW,EAAEE,WAA9C;AAA2D,IAAA,cAAc,EAAExB,cAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,KAAD;AAAO,IAAA,kBAAkB,EAAEY,kBAA3B;AAA+C,IAAA,SAAS,EAAER,SAA1D;AAAqE,IAAA,OAAO,EAAEE,OAA9E;AAAuF,IAAA,QAAQ,EAAEJ,QAAjG;AAA2G,IAAA,SAAS,EAAEQ,cAAtH;AAAsI,IAAA,UAAU,EAAEF,cAAlJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD;;AAED,eAAeT,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport useTime from \"../utils/useTime\";\nimport BreakTime from \"./BreakTime\";\nimport FocusTime from \"./FocusTime\";\nimport PlayPause from \"./PlayPause\";\nimport Timer from \"./Timer\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [inSession, setInSession] = useState(false);\n  const [onBreak, setOnBreak] = useState(false);\n  const [breakTimeState, setBreakTimeState] = useState(5)\n  const [focusTimeState, setFocusTimeState] = useState(25)\n  const [timeRemainingState, setTimeRemainingState] = useState(focusTimeState*60)\n  const alarm = new Audio('https://actions.google.com/sounds/v1/alarms/alarm_clock.ogg');\n\n  const increaseByFive = () => {\n    if(inSession) return;\n    if (focusTimeState === 60) return;\n    setFocusTimeState((current) => current + 5)\n    setTimeRemainingState((current) => current + 300)\n  } \n  const decreaseByFive = () => {\n    if(inSession) return;\n    if (focusTimeState === 5) return;\n    setFocusTimeState((current) => current - 5)\n    setTimeRemainingState((current) => current - 300)\n  } \n  const increaseByOne = () => {\n    if(inSession) return;\n    if (breakTimeState === 15) return;\n    setBreakTimeState((current) => current + 1)\n  } \n  const decreaseByOne = () => {\n    if(inSession) return;\n    if (breakTimeState === 1) return;\n    setBreakTimeState((current) => current - 1)\n  }\n  \n  useTime(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n      setTimeRemainingState((current) => current - 1);\n      if (timeRemainingState <= 0) {\n        setIsPaused(() => !isPaused)\n        alarm.play();\n        if (onBreak === false) {\n          setOnBreak(() => !onBreak);\n          setTimeRemainingState(breakTimeState*60);\n        } else {\n          setOnBreak(() => !onBreak);\n          setTimeRemainingState(focusTimeState*60);\n        }\n      }\n\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  \n  function playPause() {\n    if (!isTimerRunning) setInSession(true);\n    if (inSession) setIsPaused((prevState) => !prevState);\n    setIsTimerRunning((prevState) => !prevState);\n  }\n  \n  function stopSession() {\n    if (!inSession) return;\n    setInSession(false); setOnBreak(false); setIsPaused(false); setIsTimerRunning(false);\n    setTimeRemainingState(focusTimeState*60)\n  }\n  \n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row mb-5\">\n        <FocusTime focusTime={focusTimeState} inSession={inSession} upByFive={increaseByFive} downByFive={decreaseByFive} />\n        <BreakTime breakTime={breakTimeState} upByOne={increaseByOne} downByOne={decreaseByOne} />\n      </div>\n      <PlayPause playPause={playPause} stopSession={stopSession} isTimerRunning={isTimerRunning} />\n      <Timer timeRemainingState={timeRemainingState} inSession={inSession} onBreak={onBreak} isPaused={isPaused} focusTime={focusTimeState} breakTimel={breakTimeState} />\n    </div>\n  );\n}\n\nexport default Pomodoro;"]},"metadata":{},"sourceType":"module"}