{"ast":null,"code":"import React from\"react\";import{minutesToDuration}from\"../utils/duration\";import{secondsToDuration}from\"../utils/duration\";function Subtitle(_ref){var aria=_ref.aria,breakDuration=_ref.breakDuration,focusDuration=_ref.focusDuration,session=_ref.session,isTimerRunning=_ref.isTimerRunning;return/*#__PURE__*/React.createElement(\"div\",null,session&&/*#__PURE__*/React.createElement(\"div\",{className:\"row mb-2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"h2\",{\"data-testid\":\"session-title\"},session&&session.label,\" for \",minutesToDuration(\"0\"+(session.label.toLowerCase().indexOf(\"ocus\")>0?focusDuration:breakDuration)),\" minutes\"),/*#__PURE__*/React.createElement(\"p\",{className:\"lead\",\"data-testid\":\"session-sub-title\"},session&&secondsToDuration(session.timeRemaining),\" remaining\"),isTimerRunning?\"\":/*#__PURE__*/React.createElement(\"h2\",null,\"PAUSED\"))),session&&/*#__PURE__*/React.createElement(\"div\",{className:\"row mb-2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"div\",{className:\"progress\",style:{height:\"20px\"}},/*#__PURE__*/React.createElement(\"div\",{className:\"progress-bar\",role:\"progressbar\",\"aria-valuemin\":\"0\",\"aria-valuemax\":\"100\",\"aria-valuenow\":aria// TODO: Increase aria-valuenow as elapsed time increases\n,style:{width:\"\".concat(aria,\"%\")}// TODO: Increase width % as elapsed time increases\n})))));}export default Subtitle;","map":{"version":3,"sources":["/Users/cthyne/Desktop/qualified-challenges/pomodoro-timer/src/pomodoro/Subtitle.js"],"names":["React","minutesToDuration","secondsToDuration","Subtitle","aria","breakDuration","focusDuration","session","isTimerRunning","label","toLowerCase","indexOf","timeRemaining","height","width"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,iBAAT,KAAkC,mBAAlC,CACA,OAASC,iBAAT,KAAkC,mBAAlC,CAEA,QAASC,CAAAA,QAAT,MAAmF,IAA/DC,CAAAA,IAA+D,MAA/DA,IAA+D,CAAzDC,aAAyD,MAAzDA,aAAyD,CAA1CC,aAA0C,MAA1CA,aAA0C,CAA3BC,OAA2B,MAA3BA,OAA2B,CAAlBC,cAAkB,MAAlBA,cAAkB,CAC/E,mBACI,+BAEKD,OAAO,eAAK,2BAAK,SAAS,CAAC,UAAf,eACT,2BAAK,SAAS,CAAC,KAAf,eAEI,0BAAI,cAAY,eAAhB,EACCA,OAAO,EAAIA,OAAO,CAACE,KADpB,SACgCR,iBAAiB,CAAC,KAAOM,OAAO,CAACE,KAAR,CAAcC,WAAd,GAA4BC,OAA5B,CAAoC,MAApC,EAA8C,CAA9C,CAAkDL,aAAlD,CAAkED,aAAzE,CAAD,CADjD,YAFJ,cAMI,yBAAG,SAAS,CAAC,MAAb,CAAoB,cAAY,mBAAhC,EACCE,OAAO,EAAIL,iBAAiB,CAACK,OAAO,CAACK,aAAT,CAD7B,cANJ,CAUKJ,cAAc,CAAG,EAAH,cAAQ,uCAV3B,CADS,CAFjB,CAgBKD,OAAO,eAAI,2BAAK,SAAS,CAAC,UAAf,eACR,2BAAK,SAAS,CAAC,KAAf,eACI,2BAAK,SAAS,CAAC,UAAf,CAA0B,KAAK,CAAE,CAAEM,MAAM,CAAE,MAAV,CAAjC,eACA,2BACI,SAAS,CAAC,cADd,CAEI,IAAI,CAAC,aAFT,CAGI,gBAAc,GAHlB,CAII,gBAAc,KAJlB,CAKI,gBAAeT,IAAM;AALzB,CAMI,KAAK,CAAE,CAAEU,KAAK,WAAKV,IAAL,KAAP,CAAuB;AANlC,EADA,CADJ,CADQ,CAhBhB,CADJ,CAiCH,CAED,cAAeD,CAAAA,QAAf","sourcesContent":["import React from \"react\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport { secondsToDuration } from \"../utils/duration\";\n\nfunction Subtitle({ aria, breakDuration, focusDuration, session, isTimerRunning }) {\n    return (\n        <div>\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n            {session && (<div className=\"row mb-2\">\n                <div className=\"col\">\n                    {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n                    <h2 data-testid=\"session-title\">\n                    {session && session.label} for {minutesToDuration(\"0\" + (session.label.toLowerCase().indexOf(\"ocus\") > 0 ? focusDuration : breakDuration))} minutes\n                    </h2>\n                    {/* TODO: Update message below correctly format the time remaining in the current session */}\n                    <p className=\"lead\" data-testid=\"session-sub-title\">\n                    {session && secondsToDuration(session.timeRemaining)} remaining\n                    {/* Onclick handler for focus time should also reset time remaining to the new \"focus\" time */}\n                    </p>\n                    {isTimerRunning ? \"\" : <h2>PAUSED</h2>}\n                </div>\n            </div>)}\n            {session && <div className=\"row mb-2\">\n                <div className=\"col\">\n                    <div className=\"progress\" style={{ height: \"20px\" }}>\n                    <div\n                        className=\"progress-bar\"\n                        role=\"progressbar\"\n                        aria-valuemin=\"0\"\n                        aria-valuemax=\"100\"\n                        aria-valuenow={aria} // TODO: Increase aria-valuenow as elapsed time increases\n                        style={{ width: `${aria}%` }} // TODO: Increase width % as elapsed time increases\n                    />\n                    </div>\n                </div>\n            </div>}\n        </div>\n    )\n}\n\nexport default Subtitle;"]},"metadata":{},"sourceType":"module"}